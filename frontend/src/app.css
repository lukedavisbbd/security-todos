:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light;
  color: #213547;
  background-color: #ffffff;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;

  &.btn {
    color: inherit;
  }
  
  &:hover {
    color: #535bf2;
    
    &.btn {
      color: inherit;
    }
  }
}

html {
  height: 100%;
}

body {
  margin: 0;
  min-height: 100%;
}

h1, h2, h3, h4, h5, h6, p {
  margin: 0;
  font-weight: normal;
}

h1 {
  font-size: 3rem;
}

h2 {
  font-size: 2.5rem;
}

h3 {
  font-size: 2rem;
}

h4 {
  font-size: 1.5rem;
}

h5 {
  font-size: 1rem;
}

h6 {
  font-size: 1rem;
}

#app {
  display: contents;
}

main > article {
  max-width: 56rem;
  margin: 0 auto;
  padding: 1rem 2rem;
}

button {
  background-color: unset;
  border: none;
  cursor: pointer;

  transition-duration: 150ms;
}

.lucide-icon {
  width: 1em;
  height: 1em;
  margin-bottom: -0.15em;
  font-size: inherit;

  &.full {
    margin-bottom: 0;
  }
}

.btn {
  display: flex;
  align-items: center;
  padding: 0.5rem 0.75rem;
  border-radius: 0.35rem;
  gap: 0.25rem;
  line-height: 1;
  font-size: inherit;

  &:enabled:hover, &[href]:hover {
    background-color: #21354733;
    opacity: 0.75;
  }
}

.btn-small {
  padding: 0.25rem;
}

.btn-outline {
  border: 1px solid #21354733;
}

.btn-center {
  justify-content: center;
}

.btn-primary {
  background-color: green;
  color: white;
  
  :not(:disabled) {
    background-color: darkgreen;
    color: #eee;
    opacity: 1;
  }
}

.btn-dark {
  background-color: #333;
  color: white;
  
  :not(:disabled) {
    background-color: #444;
    color: #eee;
    opacity: 1;
  }
}

.w-full {
  width: 100%;
}

.text-center {
  text-align: center;
}

small {
  line-height: 1.5;
}

.grey-zone {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: #0002;
  z-index: 20;
}

.modal-wrapper {
  display: flex;
  justify-content: center;
  align-items: center;

  dialog {
    position: absolute;
    border: none;

    background-color: #fafafa;
    box-shadow: 0 0.5rem 0.5rem #0001;
    position: absolute;
    z-index: 30;
    padding: 1rem;
    display: flex;
    flex-direction: column;
    border-radius: 1rem;
    gap: 1rem;

    width: 100%;
    max-width: 18rem;

    header {
      display: flex;
      justify-content: space-between;
      font-size: 1.25rem;
      color: #333;
    }

    form {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    article {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }
  }
}

.error {
  display: block;
  color: red;
  font-size: 0.75rem;
  margin-left: 0.05rem;
}

input {
  display: block;
  padding: 0.3rem 0.75rem;
  border: 1px solid #0003;
  border-radius: 0.3rem;
  width: 100%;
  max-width: unset;

  &.two-factor {
    font-family: monospace;
    font-size: 2rem;
    letter-spacing: 1rem;

    @media (max-width: 15rem) {
      font-size: 1.8rem;
    }

    @media (min-width: 17rem) {
      padding-left: 2rem;
    }

    &::placeholder {
      opacity: 0.5;
    }
  }
}

label.inline {
  &:has(+ input.two-factor) {
    position: absolute;
    transform: translate(0.75rem, 0.2rem);
    font-size: 0.85rem;
    opacity: 0.75;
    transition-duration: 150ms;
  }

  &:has(+ input.two-factor:focus) {
    font-size: 0.65rem;
    transform: translate(0.75rem, 0.2rem);
    color: blue;
  }

  &:has(+ input.two-factor:not(:placeholder-shown)) {
    font-size: 0.65rem;
    transform: translate(0.75rem, 0.2rem);
  }

  &:has(+ input) {
    position: absolute;
    transform: translate(0.75rem, 0.65rem);
    font-size: 0.85rem;
    opacity: 0.75;
    transition-duration: 150ms;
  }

  &:has(+ input:focus) {
    font-size: 0.65rem;
    transform: translate(0.75rem, 0.2rem);
    color: blue;
  }

  &:has(+ input:not(:placeholder-shown)) {
    font-size: 0.65rem;
    transform: translate(0.75rem, 0.2rem);
  }

  + input {
    padding-top: 1.25rem;
  }
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 2s linear infinite;
}
